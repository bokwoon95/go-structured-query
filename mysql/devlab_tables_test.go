// Code generated by 'sqgen-mysql tables'; DO NOT EDIT.
package sq // modified to break import cycle

// TABLE_APPLICATIONS references the devlab.applications table.
type TABLE_APPLICATIONS struct {
	*TableInfo
	APPLICATION_DATA     JSONField
	APPLICATION_FORM_ID  NumberField
	APPLICATION_ID       NumberField
	COHORT               StringField
	CREATED_AT           TimeField
	CREATOR_USER_ROLE_ID NumberField
	DELETED_AT           TimeField
	MAGICSTRING          StringField
	PROJECT_IDEA         StringField
	PROJECT_LEVEL        StringField
	STATUS               StringField
	SUBMITTED            BooleanField
	TEAM_ID              NumberField
	TEAM_NAME            StringField
	UPDATED_AT           TimeField
}

// APPLICATIONS creates an instance of the devlab.applications table.
func APPLICATIONS() TABLE_APPLICATIONS {
	tbl := TABLE_APPLICATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "applications",
	}}
	tbl.APPLICATION_DATA = NewJSONField("application_data", tbl.TableInfo)
	tbl.APPLICATION_FORM_ID = NewNumberField("application_form_id", tbl.TableInfo)
	tbl.APPLICATION_ID = NewNumberField("application_id", tbl.TableInfo)
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.CREATOR_USER_ROLE_ID = NewNumberField("creator_user_role_id", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MAGICSTRING = NewStringField("magicstring", tbl.TableInfo)
	tbl.PROJECT_IDEA = NewStringField("project_idea", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.TEAM_NAME = NewStringField("team_name", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_APPLICATIONS) As(alias string) TABLE_APPLICATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_APPLICATIONS_STATUS_ENUM references the devlab.applications_status_enum table.
type TABLE_APPLICATIONS_STATUS_ENUM struct {
	*TableInfo
	STATUS StringField
}

// APPLICATIONS_STATUS_ENUM creates an instance of the devlab.applications_status_enum table.
func APPLICATIONS_STATUS_ENUM() TABLE_APPLICATIONS_STATUS_ENUM {
	tbl := TABLE_APPLICATIONS_STATUS_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "applications_status_enum",
	}}
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_APPLICATIONS_STATUS_ENUM) As(alias string) TABLE_APPLICATIONS_STATUS_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_COHORT_ENUM references the devlab.cohort_enum table.
type TABLE_COHORT_ENUM struct {
	*TableInfo
	COHORT StringField
}

// COHORT_ENUM creates an instance of the devlab.cohort_enum table.
func COHORT_ENUM() TABLE_COHORT_ENUM {
	tbl := TABLE_COHORT_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "cohort_enum",
	}}
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_COHORT_ENUM) As(alias string) TABLE_COHORT_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_FEEDBACK_ON_TEAMS references the devlab.feedback_on_teams table.
type TABLE_FEEDBACK_ON_TEAMS struct {
	*TableInfo
	CREATED_AT          TimeField
	DELETED_AT          TimeField
	EVALUATEE_TEAM_ID   NumberField
	EVALUATOR_TEAM_ID   NumberField
	FEEDBACK_DATA       JSONField
	FEEDBACK_FORM_ID    NumberField
	FEEDBACK_ID_ON_TEAM NumberField
	OVERRIDE_OPEN       BooleanField
	SUBMITTED           BooleanField
	UPDATED_AT          TimeField
}

// FEEDBACK_ON_TEAMS creates an instance of the devlab.feedback_on_teams table.
func FEEDBACK_ON_TEAMS() TABLE_FEEDBACK_ON_TEAMS {
	tbl := TABLE_FEEDBACK_ON_TEAMS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "feedback_on_teams",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_ID = NewNumberField("evaluatee_team_id", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_ID = NewNumberField("evaluator_team_id", tbl.TableInfo)
	tbl.FEEDBACK_DATA = NewJSONField("feedback_data", tbl.TableInfo)
	tbl.FEEDBACK_FORM_ID = NewNumberField("feedback_form_id", tbl.TableInfo)
	tbl.FEEDBACK_ID_ON_TEAM = NewNumberField("feedback_id_on_team", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_FEEDBACK_ON_TEAMS) As(alias string) TABLE_FEEDBACK_ON_TEAMS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_FEEDBACK_ON_USERS references the devlab.feedback_on_users table.
type TABLE_FEEDBACK_ON_USERS struct {
	*TableInfo
	CREATED_AT             TimeField
	DELETED_AT             TimeField
	EVALUATEE_USER_ROLE_ID NumberField
	EVALUATOR_TEAM_ID      NumberField
	FEEDBACK_DATA          JSONField
	FEEDBACK_FORM_ID       NumberField
	FEEDBACK_ID_ON_USER    NumberField
	OVERRIDE_OPEN          BooleanField
	SUBMITTED              BooleanField
	UPDATED_AT             TimeField
}

// FEEDBACK_ON_USERS creates an instance of the devlab.feedback_on_users table.
func FEEDBACK_ON_USERS() TABLE_FEEDBACK_ON_USERS {
	tbl := TABLE_FEEDBACK_ON_USERS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "feedback_on_users",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE_USER_ROLE_ID = NewNumberField("evaluatee_user_role_id", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_ID = NewNumberField("evaluator_team_id", tbl.TableInfo)
	tbl.FEEDBACK_DATA = NewJSONField("feedback_data", tbl.TableInfo)
	tbl.FEEDBACK_FORM_ID = NewNumberField("feedback_form_id", tbl.TableInfo)
	tbl.FEEDBACK_ID_ON_USER = NewNumberField("feedback_id_on_user", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_FEEDBACK_ON_USERS) As(alias string) TABLE_FEEDBACK_ON_USERS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_FORMS references the devlab.forms table.
type TABLE_FORMS struct {
	*TableInfo
	CREATED_AT TimeField
	DELETED_AT TimeField
	FORM_ID    NumberField
	NAME       StringField
	PERIOD_ID  NumberField
	QUESTIONS  JSONField
	SUBSECTION StringField
	UPDATED_AT TimeField
}

// FORMS creates an instance of the devlab.forms table.
func FORMS() TABLE_FORMS {
	tbl := TABLE_FORMS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "forms",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.FORM_ID = NewNumberField("form_id", tbl.TableInfo)
	tbl.NAME = NewStringField("name", tbl.TableInfo)
	tbl.PERIOD_ID = NewNumberField("period_id", tbl.TableInfo)
	tbl.QUESTIONS = NewJSONField("questions", tbl.TableInfo)
	tbl.SUBSECTION = NewStringField("subsection", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_FORMS) As(alias string) TABLE_FORMS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_FORMS_AUTHORIZED_ROLES references the devlab.forms_authorized_roles table.
type TABLE_FORMS_AUTHORIZED_ROLES struct {
	*TableInfo
	FORM_ID NumberField
	ROLE    StringField
}

// FORMS_AUTHORIZED_ROLES creates an instance of the devlab.forms_authorized_roles table.
func FORMS_AUTHORIZED_ROLES() TABLE_FORMS_AUTHORIZED_ROLES {
	tbl := TABLE_FORMS_AUTHORIZED_ROLES{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "forms_authorized_roles",
	}}
	tbl.FORM_ID = NewNumberField("form_id", tbl.TableInfo)
	tbl.ROLE = NewStringField("role", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_FORMS_AUTHORIZED_ROLES) As(alias string) TABLE_FORMS_AUTHORIZED_ROLES {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_MEDIA references the devlab.media table.
type TABLE_MEDIA struct {
	*TableInfo
	CREATED_AT  TimeField
	DATA        BinaryField
	DELETED_AT  TimeField
	DESCRIPTION StringField
	NAME        StringField
	TYPE        StringField
	UPDATED_AT  TimeField
	UUID        BinaryField
}

// MEDIA creates an instance of the devlab.media table.
func MEDIA() TABLE_MEDIA {
	tbl := TABLE_MEDIA{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "media",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DATA = NewBinaryField("data", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.DESCRIPTION = NewStringField("description", tbl.TableInfo)
	tbl.NAME = NewStringField("name", tbl.TableInfo)
	tbl.TYPE = NewStringField("type", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	tbl.UUID = NewBinaryField("uuid", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_MEDIA) As(alias string) TABLE_MEDIA {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_MILESTONE_ENUM references the devlab.milestone_enum table.
type TABLE_MILESTONE_ENUM struct {
	*TableInfo
	MILESTONE StringField
}

// MILESTONE_ENUM creates an instance of the devlab.milestone_enum table.
func MILESTONE_ENUM() TABLE_MILESTONE_ENUM {
	tbl := TABLE_MILESTONE_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "milestone_enum",
	}}
	tbl.MILESTONE = NewStringField("milestone", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_MILESTONE_ENUM) As(alias string) TABLE_MILESTONE_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_MIME_TYPE_ENUM references the devlab.mime_type_enum table.
type TABLE_MIME_TYPE_ENUM struct {
	*TableInfo
	TYPE StringField
}

// MIME_TYPE_ENUM creates an instance of the devlab.mime_type_enum table.
func MIME_TYPE_ENUM() TABLE_MIME_TYPE_ENUM {
	tbl := TABLE_MIME_TYPE_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "mime_type_enum",
	}}
	tbl.TYPE = NewStringField("type", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_MIME_TYPE_ENUM) As(alias string) TABLE_MIME_TYPE_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_PERIODS references the devlab.periods table.
type TABLE_PERIODS struct {
	*TableInfo
	COHORT     StringField
	CREATED_AT TimeField
	DELETED_AT TimeField
	END_AT     TimeField
	MILESTONE  StringField
	PERIOD_ID  NumberField
	STAGE      StringField
	START_AT   TimeField
	UPDATED_AT TimeField
}

// PERIODS creates an instance of the devlab.periods table.
func PERIODS() TABLE_PERIODS {
	tbl := TABLE_PERIODS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "periods",
	}}
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.END_AT = NewTimeField("end_at", tbl.TableInfo)
	tbl.MILESTONE = NewStringField("milestone", tbl.TableInfo)
	tbl.PERIOD_ID = NewNumberField("period_id", tbl.TableInfo)
	tbl.STAGE = NewStringField("stage", tbl.TableInfo)
	tbl.START_AT = NewTimeField("start_at", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_PERIODS) As(alias string) TABLE_PERIODS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_PROJECT_CATEGORY_ENUM references the devlab.project_category_enum table.
type TABLE_PROJECT_CATEGORY_ENUM struct {
	*TableInfo
	PROJECT_CATEGORY StringField
}

// PROJECT_CATEGORY_ENUM creates an instance of the devlab.project_category_enum table.
func PROJECT_CATEGORY_ENUM() TABLE_PROJECT_CATEGORY_ENUM {
	tbl := TABLE_PROJECT_CATEGORY_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "project_category_enum",
	}}
	tbl.PROJECT_CATEGORY = NewStringField("project_category", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_PROJECT_CATEGORY_ENUM) As(alias string) TABLE_PROJECT_CATEGORY_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_PROJECT_LEVEL_ENUM references the devlab.project_level_enum table.
type TABLE_PROJECT_LEVEL_ENUM struct {
	*TableInfo
	PROJECT_LEVEL StringField
}

// PROJECT_LEVEL_ENUM creates an instance of the devlab.project_level_enum table.
func PROJECT_LEVEL_ENUM() TABLE_PROJECT_LEVEL_ENUM {
	tbl := TABLE_PROJECT_LEVEL_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "project_level_enum",
	}}
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_PROJECT_LEVEL_ENUM) As(alias string) TABLE_PROJECT_LEVEL_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_ROLE_ENUM references the devlab.role_enum table.
type TABLE_ROLE_ENUM struct {
	*TableInfo
	ROLE StringField
}

// ROLE_ENUM creates an instance of the devlab.role_enum table.
func ROLE_ENUM() TABLE_ROLE_ENUM {
	tbl := TABLE_ROLE_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "role_enum",
	}}
	tbl.ROLE = NewStringField("role", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_ROLE_ENUM) As(alias string) TABLE_ROLE_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_SESSIONS references the devlab.sessions table.
type TABLE_SESSIONS struct {
	*TableInfo
	CREATED_AT TimeField
	HASH       StringField
	USER_ID    NumberField
}

// SESSIONS creates an instance of the devlab.sessions table.
func SESSIONS() TABLE_SESSIONS {
	tbl := TABLE_SESSIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "sessions",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.HASH = NewStringField("hash", tbl.TableInfo)
	tbl.USER_ID = NewNumberField("user_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_SESSIONS) As(alias string) TABLE_SESSIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_STAGE_ENUM references the devlab.stage_enum table.
type TABLE_STAGE_ENUM struct {
	*TableInfo
	STAGE StringField
}

// STAGE_ENUM creates an instance of the devlab.stage_enum table.
func STAGE_ENUM() TABLE_STAGE_ENUM {
	tbl := TABLE_STAGE_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "stage_enum",
	}}
	tbl.STAGE = NewStringField("stage", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_STAGE_ENUM) As(alias string) TABLE_STAGE_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_SUBMISSIONS references the devlab.submissions table.
type TABLE_SUBMISSIONS struct {
	*TableInfo
	CREATED_AT         TimeField
	DELETED_AT         TimeField
	OVERRIDE_OPEN      BooleanField
	POSTER             StringField
	README             StringField
	SUBMISSION_DATA    JSONField
	SUBMISSION_FORM_ID NumberField
	SUBMISSION_ID      NumberField
	SUBMITTED          BooleanField
	TEAM_ID            NumberField
	UPDATED_AT         TimeField
	VIDEO              StringField
}

// SUBMISSIONS creates an instance of the devlab.submissions table.
func SUBMISSIONS() TABLE_SUBMISSIONS {
	tbl := TABLE_SUBMISSIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "submissions",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.POSTER = NewStringField("poster", tbl.TableInfo)
	tbl.README = NewStringField("readme", tbl.TableInfo)
	tbl.SUBMISSION_DATA = NewJSONField("submission_data", tbl.TableInfo)
	tbl.SUBMISSION_FORM_ID = NewNumberField("submission_form_id", tbl.TableInfo)
	tbl.SUBMISSION_ID = NewNumberField("submission_id", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	tbl.VIDEO = NewStringField("video", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_SUBMISSIONS) As(alias string) TABLE_SUBMISSIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_SUBMISSIONS_CATEGORIES references the devlab.submissions_categories table.
type TABLE_SUBMISSIONS_CATEGORIES struct {
	*TableInfo
	CATEGORY      StringField
	SUBMISSION_ID NumberField
}

// SUBMISSIONS_CATEGORIES creates an instance of the devlab.submissions_categories table.
func SUBMISSIONS_CATEGORIES() TABLE_SUBMISSIONS_CATEGORIES {
	tbl := TABLE_SUBMISSIONS_CATEGORIES{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "submissions_categories",
	}}
	tbl.CATEGORY = NewStringField("category", tbl.TableInfo)
	tbl.SUBMISSION_ID = NewNumberField("submission_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_SUBMISSIONS_CATEGORIES) As(alias string) TABLE_SUBMISSIONS_CATEGORIES {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_TEAM_EVALUATION_PAIRS references the devlab.team_evaluation_pairs table.
type TABLE_TEAM_EVALUATION_PAIRS struct {
	*TableInfo
	EVALUATEE_TEAM_ID NumberField
	EVALUATOR_TEAM_ID NumberField
}

// TEAM_EVALUATION_PAIRS creates an instance of the devlab.team_evaluation_pairs table.
func TEAM_EVALUATION_PAIRS() TABLE_TEAM_EVALUATION_PAIRS {
	tbl := TABLE_TEAM_EVALUATION_PAIRS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "team_evaluation_pairs",
	}}
	tbl.EVALUATEE_TEAM_ID = NewNumberField("evaluatee_team_id", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_ID = NewNumberField("evaluator_team_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_TEAM_EVALUATION_PAIRS) As(alias string) TABLE_TEAM_EVALUATION_PAIRS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_TEAM_EVALUATIONS references the devlab.team_evaluations table.
type TABLE_TEAM_EVALUATIONS struct {
	*TableInfo
	CREATED_AT              TimeField
	DELETED_AT              TimeField
	EVALUATEE_SUBMISSION_ID NumberField
	EVALUATION_DATA         JSONField
	EVALUATION_FORM_ID      NumberField
	EVALUATOR_TEAM_ID       NumberField
	OVERRIDE_OPEN           BooleanField
	SUBMITTED               BooleanField
	TEAM_EVALUATION_ID      NumberField
	UPDATED_AT              TimeField
}

// TEAM_EVALUATIONS creates an instance of the devlab.team_evaluations table.
func TEAM_EVALUATIONS() TABLE_TEAM_EVALUATIONS {
	tbl := TABLE_TEAM_EVALUATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "team_evaluations",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE_SUBMISSION_ID = NewNumberField("evaluatee_submission_id", tbl.TableInfo)
	tbl.EVALUATION_DATA = NewJSONField("evaluation_data", tbl.TableInfo)
	tbl.EVALUATION_FORM_ID = NewNumberField("evaluation_form_id", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_ID = NewNumberField("evaluator_team_id", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM_EVALUATION_ID = NewNumberField("team_evaluation_id", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_TEAM_EVALUATIONS) As(alias string) TABLE_TEAM_EVALUATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_TEAMS references the devlab.teams table.
type TABLE_TEAMS struct {
	*TableInfo
	ADVISER_USER_ROLE_ID NumberField
	COHORT               StringField
	CREATED_AT           TimeField
	DELETED_AT           TimeField
	MENTOR_USER_ROLE_ID  NumberField
	PROJECT_IDEA         StringField
	PROJECT_LEVEL        StringField
	STATUS               StringField
	TEAM_DATA            JSONField
	TEAM_ID              NumberField
	TEAM_NAME            StringField
	UPDATED_AT           TimeField
}

// TEAMS creates an instance of the devlab.teams table.
func TEAMS() TABLE_TEAMS {
	tbl := TABLE_TEAMS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "teams",
	}}
	tbl.ADVISER_USER_ROLE_ID = NewNumberField("adviser_user_role_id", tbl.TableInfo)
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MENTOR_USER_ROLE_ID = NewNumberField("mentor_user_role_id", tbl.TableInfo)
	tbl.PROJECT_IDEA = NewStringField("project_idea", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	tbl.TEAM_DATA = NewJSONField("team_data", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.TEAM_NAME = NewStringField("team_name", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_TEAMS) As(alias string) TABLE_TEAMS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_TEAMS_STATUS_ENUM references the devlab.teams_status_enum table.
type TABLE_TEAMS_STATUS_ENUM struct {
	*TableInfo
	STATUS StringField
}

// TEAMS_STATUS_ENUM creates an instance of the devlab.teams_status_enum table.
func TEAMS_STATUS_ENUM() TABLE_TEAMS_STATUS_ENUM {
	tbl := TABLE_TEAMS_STATUS_ENUM{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "teams_status_enum",
	}}
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_TEAMS_STATUS_ENUM) As(alias string) TABLE_TEAMS_STATUS_ENUM {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USER_EVALUATIONS references the devlab.user_evaluations table.
type TABLE_USER_EVALUATIONS struct {
	*TableInfo
	CREATED_AT              TimeField
	DELETED_AT              TimeField
	EVALUATEE_SUBMISSION_ID NumberField
	EVALUATION_DATA         JSONField
	EVALUATION_FORM_ID      NumberField
	EVALUATOR_USER_ROLE_ID  NumberField
	OVERRIDE_OPEN           BooleanField
	SUBMITTED               BooleanField
	UPDATED_AT              TimeField
	USER_EVALUATION_ID      NumberField
}

// USER_EVALUATIONS creates an instance of the devlab.user_evaluations table.
func USER_EVALUATIONS() TABLE_USER_EVALUATIONS {
	tbl := TABLE_USER_EVALUATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "user_evaluations",
	}}
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EVALUATEE_SUBMISSION_ID = NewNumberField("evaluatee_submission_id", tbl.TableInfo)
	tbl.EVALUATION_DATA = NewJSONField("evaluation_data", tbl.TableInfo)
	tbl.EVALUATION_FORM_ID = NewNumberField("evaluation_form_id", tbl.TableInfo)
	tbl.EVALUATOR_USER_ROLE_ID = NewNumberField("evaluator_user_role_id", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	tbl.USER_EVALUATION_ID = NewNumberField("user_evaluation_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USER_EVALUATIONS) As(alias string) TABLE_USER_EVALUATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USER_ROLES references the devlab.user_roles table.
type TABLE_USER_ROLES struct {
	*TableInfo
	COHORT       StringField
	CREATED_AT   TimeField
	DELETED_AT   TimeField
	ROLE         StringField
	UPDATED_AT   TimeField
	USER_ID      NumberField
	USER_ROLE_ID NumberField
}

// USER_ROLES creates an instance of the devlab.user_roles table.
func USER_ROLES() TABLE_USER_ROLES {
	tbl := TABLE_USER_ROLES{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "user_roles",
	}}
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.ROLE = NewStringField("role", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	tbl.USER_ID = NewNumberField("user_id", tbl.TableInfo)
	tbl.USER_ROLE_ID = NewNumberField("user_role_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USER_ROLES) As(alias string) TABLE_USER_ROLES {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USER_ROLES_APPLICANTS references the devlab.user_roles_applicants table.
type TABLE_USER_ROLES_APPLICANTS struct {
	*TableInfo
	APPLICANT_DATA    JSONField
	APPLICANT_FORM_ID NumberField
	APPLICATION_ID    NumberField
	USER_ROLE_ID      NumberField
}

// USER_ROLES_APPLICANTS creates an instance of the devlab.user_roles_applicants table.
func USER_ROLES_APPLICANTS() TABLE_USER_ROLES_APPLICANTS {
	tbl := TABLE_USER_ROLES_APPLICANTS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "user_roles_applicants",
	}}
	tbl.APPLICANT_DATA = NewJSONField("applicant_data", tbl.TableInfo)
	tbl.APPLICANT_FORM_ID = NewNumberField("applicant_form_id", tbl.TableInfo)
	tbl.APPLICATION_ID = NewNumberField("application_id", tbl.TableInfo)
	tbl.USER_ROLE_ID = NewNumberField("user_role_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USER_ROLES_APPLICANTS) As(alias string) TABLE_USER_ROLES_APPLICANTS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USER_ROLES_STUDENTS references the devlab.user_roles_students table.
type TABLE_USER_ROLES_STUDENTS struct {
	*TableInfo
	STUDENT_DATA JSONField
	TEAM_ID      NumberField
	USER_ROLE_ID NumberField
}

// USER_ROLES_STUDENTS creates an instance of the devlab.user_roles_students table.
func USER_ROLES_STUDENTS() TABLE_USER_ROLES_STUDENTS {
	tbl := TABLE_USER_ROLES_STUDENTS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "user_roles_students",
	}}
	tbl.STUDENT_DATA = NewJSONField("student_data", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.USER_ROLE_ID = NewNumberField("user_role_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USER_ROLES_STUDENTS) As(alias string) TABLE_USER_ROLES_STUDENTS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USERS references the devlab.users table.
type TABLE_USERS struct {
	*TableInfo
	DISPLAYNAME StringField
	EMAIL       StringField
	PASSWORD    StringField
	USER_ID     NumberField
}

// USERS creates an instance of the devlab.users table.
func USERS() TABLE_USERS {
	tbl := TABLE_USERS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "users",
	}}
	tbl.DISPLAYNAME = NewStringField("displayname", tbl.TableInfo)
	tbl.EMAIL = NewStringField("email", tbl.TableInfo)
	tbl.PASSWORD = NewStringField("password", tbl.TableInfo)
	tbl.USER_ID = NewNumberField("user_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USERS) As(alias string) TABLE_USERS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_APPLICATIONS references the devlab.v_applications view.
type VIEW_V_APPLICATIONS struct {
	*TableInfo
	APPLICANT1_ANSWERS      JSONField
	APPLICANT1_DISPLAYNAME  StringField
	APPLICANT1_EMAIL        StringField
	APPLICANT1_USER_ID      NumberField
	APPLICANT1_USER_ROLE_ID NumberField
	APPLICANT2_ANSWERS      JSONField
	APPLICANT2_DISPLAYNAME  StringField
	APPLICANT2_EMAIL        StringField
	APPLICANT2_USER_ID      NumberField
	APPLICANT2_USER_ROLE_ID NumberField
	APPLICANT_FORM_ID       NumberField
	APPLICANT_QUESTIONS     JSONField
	APPLICATION_ANSWERS     JSONField
	APPLICATION_FORM_ID     NumberField
	APPLICATION_ID          NumberField
	APPLICATION_QUESTIONS   JSONField
	COHORT                  StringField
	CREATED_AT              TimeField
	CREATOR_USER_ROLE_ID    NumberField
	DELETED_AT              TimeField
	MAGICSTRING             StringField
	PROJECT_LEVEL           StringField
	STATUS                  StringField
	SUBMITTED               BooleanField
	UPDATED_AT              TimeField
}

// V_APPLICATIONS creates an instance of the devlab.v_applications view.
func V_APPLICATIONS() VIEW_V_APPLICATIONS {
	tbl := VIEW_V_APPLICATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_applications",
	}}
	tbl.APPLICANT1_ANSWERS = NewJSONField("applicant1_answers", tbl.TableInfo)
	tbl.APPLICANT1_DISPLAYNAME = NewStringField("applicant1_displayname", tbl.TableInfo)
	tbl.APPLICANT1_EMAIL = NewStringField("applicant1_email", tbl.TableInfo)
	tbl.APPLICANT1_USER_ID = NewNumberField("applicant1_user_id", tbl.TableInfo)
	tbl.APPLICANT1_USER_ROLE_ID = NewNumberField("applicant1_user_role_id", tbl.TableInfo)
	tbl.APPLICANT2_ANSWERS = NewJSONField("applicant2_answers", tbl.TableInfo)
	tbl.APPLICANT2_DISPLAYNAME = NewStringField("applicant2_displayname", tbl.TableInfo)
	tbl.APPLICANT2_EMAIL = NewStringField("applicant2_email", tbl.TableInfo)
	tbl.APPLICANT2_USER_ID = NewNumberField("applicant2_user_id", tbl.TableInfo)
	tbl.APPLICANT2_USER_ROLE_ID = NewNumberField("applicant2_user_role_id", tbl.TableInfo)
	tbl.APPLICANT_FORM_ID = NewNumberField("applicant_form_id", tbl.TableInfo)
	tbl.APPLICANT_QUESTIONS = NewJSONField("applicant_questions", tbl.TableInfo)
	tbl.APPLICATION_ANSWERS = NewJSONField("application_answers", tbl.TableInfo)
	tbl.APPLICATION_FORM_ID = NewNumberField("application_form_id", tbl.TableInfo)
	tbl.APPLICATION_ID = NewNumberField("application_id", tbl.TableInfo)
	tbl.APPLICATION_QUESTIONS = NewJSONField("application_questions", tbl.TableInfo)
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.CREATED_AT = NewTimeField("created_at", tbl.TableInfo)
	tbl.CREATOR_USER_ROLE_ID = NewNumberField("creator_user_role_id", tbl.TableInfo)
	tbl.DELETED_AT = NewTimeField("deleted_at", tbl.TableInfo)
	tbl.MAGICSTRING = NewStringField("magicstring", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_APPLICATIONS) As(alias string) VIEW_V_APPLICATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_SUBMISSIONS references the devlab.v_submissions view.
type VIEW_V_SUBMISSIONS struct {
	*TableInfo
	ANSWERS            JSONField
	COHORT             StringField
	END_AT             TimeField
	MILESTONE          StringField
	OVERRIDE_OPEN      BooleanField
	PROJECT_LEVEL      StringField
	QUESTIONS          JSONField
	START_AT           TimeField
	SUBMISSION_FORM_ID NumberField
	SUBMISSION_ID      NumberField
	SUBMITTED          BooleanField
	TEAM_ID            NumberField
	TEAM_NAME          StringField
	UPDATED_AT         TimeField
}

// V_SUBMISSIONS creates an instance of the devlab.v_submissions view.
func V_SUBMISSIONS() VIEW_V_SUBMISSIONS {
	tbl := VIEW_V_SUBMISSIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_submissions",
	}}
	tbl.ANSWERS = NewJSONField("answers", tbl.TableInfo)
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.END_AT = NewTimeField("end_at", tbl.TableInfo)
	tbl.MILESTONE = NewStringField("milestone", tbl.TableInfo)
	tbl.OVERRIDE_OPEN = NewBooleanField("override_open", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.QUESTIONS = NewJSONField("questions", tbl.TableInfo)
	tbl.START_AT = NewTimeField("start_at", tbl.TableInfo)
	tbl.SUBMISSION_FORM_ID = NewNumberField("submission_form_id", tbl.TableInfo)
	tbl.SUBMISSION_ID = NewNumberField("submission_id", tbl.TableInfo)
	tbl.SUBMITTED = NewBooleanField("submitted", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.TEAM_NAME = NewStringField("team_name", tbl.TableInfo)
	tbl.UPDATED_AT = NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_SUBMISSIONS) As(alias string) VIEW_V_SUBMISSIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_TEAM_EVALUATIONS references the devlab.v_team_evaluations view.
type VIEW_V_TEAM_EVALUATIONS struct {
	*TableInfo
	COHORT                   StringField
	EVALUATEE_PROJECT_LEVEL  StringField
	EVALUATEE_TEAM_ID        NumberField
	EVALUATEE_TEAM_NAME      StringField
	EVALUATION_ANSWERS       JSONField
	EVALUATION_END_AT        TimeField
	EVALUATION_FORM_ID       NumberField
	EVALUATION_OVERRIDE_OPEN BooleanField
	EVALUATION_QUESTIONS     JSONField
	EVALUATION_START_AT      TimeField
	EVALUATION_SUBMITTED     BooleanField
	EVALUATION_UPDATED_AT    TimeField
	EVALUATOR_PROJECT_LEVEL  StringField
	EVALUATOR_TEAM_ID        NumberField
	EVALUATOR_TEAM_NAME      StringField
	MILESTONE                StringField
	STAGE                    StringField
	SUBMISSION_ANSWERS       JSONField
	SUBMISSION_END_AT        TimeField
	SUBMISSION_FORM_ID       NumberField
	SUBMISSION_ID            NumberField
	SUBMISSION_OVERRIDE_OPEN BooleanField
	SUBMISSION_QUESTIONS     JSONField
	SUBMISSION_START_AT      TimeField
	SUBMISSION_SUBMITTED     BooleanField
	SUBMISSION_UPDATED_AT    TimeField
	TEAM_EVALUATION_ID       NumberField
}

// V_TEAM_EVALUATIONS creates an instance of the devlab.v_team_evaluations view.
func V_TEAM_EVALUATIONS() VIEW_V_TEAM_EVALUATIONS {
	tbl := VIEW_V_TEAM_EVALUATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_team_evaluations",
	}}
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.EVALUATEE_PROJECT_LEVEL = NewStringField("evaluatee_project_level", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_ID = NewNumberField("evaluatee_team_id", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_NAME = NewStringField("evaluatee_team_name", tbl.TableInfo)
	tbl.EVALUATION_ANSWERS = NewJSONField("evaluation_answers", tbl.TableInfo)
	tbl.EVALUATION_END_AT = NewTimeField("evaluation_end_at", tbl.TableInfo)
	tbl.EVALUATION_FORM_ID = NewNumberField("evaluation_form_id", tbl.TableInfo)
	tbl.EVALUATION_OVERRIDE_OPEN = NewBooleanField("evaluation_override_open", tbl.TableInfo)
	tbl.EVALUATION_QUESTIONS = NewJSONField("evaluation_questions", tbl.TableInfo)
	tbl.EVALUATION_START_AT = NewTimeField("evaluation_start_at", tbl.TableInfo)
	tbl.EVALUATION_SUBMITTED = NewBooleanField("evaluation_submitted", tbl.TableInfo)
	tbl.EVALUATION_UPDATED_AT = NewTimeField("evaluation_updated_at", tbl.TableInfo)
	tbl.EVALUATOR_PROJECT_LEVEL = NewStringField("evaluator_project_level", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_ID = NewNumberField("evaluator_team_id", tbl.TableInfo)
	tbl.EVALUATOR_TEAM_NAME = NewStringField("evaluator_team_name", tbl.TableInfo)
	tbl.MILESTONE = NewStringField("milestone", tbl.TableInfo)
	tbl.STAGE = NewStringField("stage", tbl.TableInfo)
	tbl.SUBMISSION_ANSWERS = NewJSONField("submission_answers", tbl.TableInfo)
	tbl.SUBMISSION_END_AT = NewTimeField("submission_end_at", tbl.TableInfo)
	tbl.SUBMISSION_FORM_ID = NewNumberField("submission_form_id", tbl.TableInfo)
	tbl.SUBMISSION_ID = NewNumberField("submission_id", tbl.TableInfo)
	tbl.SUBMISSION_OVERRIDE_OPEN = NewBooleanField("submission_override_open", tbl.TableInfo)
	tbl.SUBMISSION_QUESTIONS = NewJSONField("submission_questions", tbl.TableInfo)
	tbl.SUBMISSION_START_AT = NewTimeField("submission_start_at", tbl.TableInfo)
	tbl.SUBMISSION_SUBMITTED = NewBooleanField("submission_submitted", tbl.TableInfo)
	tbl.SUBMISSION_UPDATED_AT = NewTimeField("submission_updated_at", tbl.TableInfo)
	tbl.TEAM_EVALUATION_ID = NewNumberField("team_evaluation_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_TEAM_EVALUATIONS) As(alias string) VIEW_V_TEAM_EVALUATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_TEAMS references the devlab.v_teams view.
type VIEW_V_TEAMS struct {
	*TableInfo
	ADVISER_DISPLAYNAME   StringField
	ADVISER_EMAIL         StringField
	ADVISER_USER_ID       NumberField
	ADVISER_USER_ROLE_ID  NumberField
	COHORT                StringField
	MENTOR_DISPLAYNAME    StringField
	MENTOR_EMAIL          StringField
	MENTOR_USER_ID        NumberField
	MENTOR_USER_ROLE_ID   NumberField
	PROJECT_LEVEL         StringField
	STATUS                StringField
	STUDENT1_DISPLAYNAME  StringField
	STUDENT1_EMAIL        StringField
	STUDENT1_USER_ID      NumberField
	STUDENT1_USER_ROLE_ID NumberField
	STUDENT2_DISPLAYNAME  StringField
	STUDENT2_EMAIL        StringField
	STUDENT2_USER_ID      NumberField
	STUDENT2_USER_ROLE_ID NumberField
	TEAM_ID               NumberField
	TEAM_NAME             StringField
}

// V_TEAMS creates an instance of the devlab.v_teams view.
func V_TEAMS() VIEW_V_TEAMS {
	tbl := VIEW_V_TEAMS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_teams",
	}}
	tbl.ADVISER_DISPLAYNAME = NewStringField("adviser_displayname", tbl.TableInfo)
	tbl.ADVISER_EMAIL = NewStringField("adviser_email", tbl.TableInfo)
	tbl.ADVISER_USER_ID = NewNumberField("adviser_user_id", tbl.TableInfo)
	tbl.ADVISER_USER_ROLE_ID = NewNumberField("adviser_user_role_id", tbl.TableInfo)
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.MENTOR_DISPLAYNAME = NewStringField("mentor_displayname", tbl.TableInfo)
	tbl.MENTOR_EMAIL = NewStringField("mentor_email", tbl.TableInfo)
	tbl.MENTOR_USER_ID = NewNumberField("mentor_user_id", tbl.TableInfo)
	tbl.MENTOR_USER_ROLE_ID = NewNumberField("mentor_user_role_id", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.STATUS = NewStringField("status", tbl.TableInfo)
	tbl.STUDENT1_DISPLAYNAME = NewStringField("student1_displayname", tbl.TableInfo)
	tbl.STUDENT1_EMAIL = NewStringField("student1_email", tbl.TableInfo)
	tbl.STUDENT1_USER_ID = NewNumberField("student1_user_id", tbl.TableInfo)
	tbl.STUDENT1_USER_ROLE_ID = NewNumberField("student1_user_role_id", tbl.TableInfo)
	tbl.STUDENT2_DISPLAYNAME = NewStringField("student2_displayname", tbl.TableInfo)
	tbl.STUDENT2_EMAIL = NewStringField("student2_email", tbl.TableInfo)
	tbl.STUDENT2_USER_ID = NewNumberField("student2_user_id", tbl.TableInfo)
	tbl.STUDENT2_USER_ROLE_ID = NewNumberField("student2_user_role_id", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.TEAM_NAME = NewStringField("team_name", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_TEAMS) As(alias string) VIEW_V_TEAMS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_TEAMS_AND_STUDENTS references the devlab.v_teams_and_students view.
type VIEW_V_TEAMS_AND_STUDENTS struct {
	*TableInfo
	ADVISER_USER_ROLE_ID NumberField
	MENTOR_USER_ROLE_ID  NumberField
	PROJECT_LEVEL        StringField
	STUDENT1_DISPLAYNAME StringField
	STUDENT2_DISPLAYNAME StringField
	TEAM_ID              NumberField
	TEAM_NAME            StringField
}

// V_TEAMS_AND_STUDENTS creates an instance of the devlab.v_teams_and_students view.
func V_TEAMS_AND_STUDENTS() VIEW_V_TEAMS_AND_STUDENTS {
	tbl := VIEW_V_TEAMS_AND_STUDENTS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_teams_and_students",
	}}
	tbl.ADVISER_USER_ROLE_ID = NewNumberField("adviser_user_role_id", tbl.TableInfo)
	tbl.MENTOR_USER_ROLE_ID = NewNumberField("mentor_user_role_id", tbl.TableInfo)
	tbl.PROJECT_LEVEL = NewStringField("project_level", tbl.TableInfo)
	tbl.STUDENT1_DISPLAYNAME = NewStringField("student1_displayname", tbl.TableInfo)
	tbl.STUDENT2_DISPLAYNAME = NewStringField("student2_displayname", tbl.TableInfo)
	tbl.TEAM_ID = NewNumberField("team_id", tbl.TableInfo)
	tbl.TEAM_NAME = NewStringField("team_name", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_TEAMS_AND_STUDENTS) As(alias string) VIEW_V_TEAMS_AND_STUDENTS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// VIEW_V_USER_EVALUATIONS references the devlab.v_user_evaluations view.
type VIEW_V_USER_EVALUATIONS struct {
	*TableInfo
	COHORT                   StringField
	EVALUATEE_PROJECT_LEVEL  StringField
	EVALUATEE_TEAM_ID        NumberField
	EVALUATEE_TEAM_NAME      StringField
	EVALUATION_ANSWERS       JSONField
	EVALUATION_END_AT        TimeField
	EVALUATION_FORM_ID       NumberField
	EVALUATION_OVERRIDE_OPEN BooleanField
	EVALUATION_QUESTIONS     JSONField
	EVALUATION_START_AT      TimeField
	EVALUATION_SUBMITTED     BooleanField
	EVALUATION_UPDATED_AT    TimeField
	EVALUATOR_DISPLAYNAME    StringField
	EVALUATOR_ROLE           StringField
	EVALUATOR_USER_ID        NumberField
	EVALUATOR_USER_ROLE_ID   NumberField
	MILESTONE                StringField
	STAGE                    StringField
	SUBMISSION_ANSWERS       JSONField
	SUBMISSION_END_AT        TimeField
	SUBMISSION_FORM_ID       NumberField
	SUBMISSION_ID            NumberField
	SUBMISSION_OVERRIDE_OPEN BooleanField
	SUBMISSION_QUESTIONS     JSONField
	SUBMISSION_START_AT      TimeField
	SUBMISSION_SUBMITTED     BooleanField
	SUBMISSION_UPDATED_AT    TimeField
	USER_EVALUATION_ID       NumberField
}

// V_USER_EVALUATIONS creates an instance of the devlab.v_user_evaluations view.
func V_USER_EVALUATIONS() VIEW_V_USER_EVALUATIONS {
	tbl := VIEW_V_USER_EVALUATIONS{TableInfo: &TableInfo{
		Schema: "devlab",
		Name:   "v_user_evaluations",
	}}
	tbl.COHORT = NewStringField("cohort", tbl.TableInfo)
	tbl.EVALUATEE_PROJECT_LEVEL = NewStringField("evaluatee_project_level", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_ID = NewNumberField("evaluatee_team_id", tbl.TableInfo)
	tbl.EVALUATEE_TEAM_NAME = NewStringField("evaluatee_team_name", tbl.TableInfo)
	tbl.EVALUATION_ANSWERS = NewJSONField("evaluation_answers", tbl.TableInfo)
	tbl.EVALUATION_END_AT = NewTimeField("evaluation_end_at", tbl.TableInfo)
	tbl.EVALUATION_FORM_ID = NewNumberField("evaluation_form_id", tbl.TableInfo)
	tbl.EVALUATION_OVERRIDE_OPEN = NewBooleanField("evaluation_override_open", tbl.TableInfo)
	tbl.EVALUATION_QUESTIONS = NewJSONField("evaluation_questions", tbl.TableInfo)
	tbl.EVALUATION_START_AT = NewTimeField("evaluation_start_at", tbl.TableInfo)
	tbl.EVALUATION_SUBMITTED = NewBooleanField("evaluation_submitted", tbl.TableInfo)
	tbl.EVALUATION_UPDATED_AT = NewTimeField("evaluation_updated_at", tbl.TableInfo)
	tbl.EVALUATOR_DISPLAYNAME = NewStringField("evaluator_displayname", tbl.TableInfo)
	tbl.EVALUATOR_ROLE = NewStringField("evaluator_role", tbl.TableInfo)
	tbl.EVALUATOR_USER_ID = NewNumberField("evaluator_user_id", tbl.TableInfo)
	tbl.EVALUATOR_USER_ROLE_ID = NewNumberField("evaluator_user_role_id", tbl.TableInfo)
	tbl.MILESTONE = NewStringField("milestone", tbl.TableInfo)
	tbl.STAGE = NewStringField("stage", tbl.TableInfo)
	tbl.SUBMISSION_ANSWERS = NewJSONField("submission_answers", tbl.TableInfo)
	tbl.SUBMISSION_END_AT = NewTimeField("submission_end_at", tbl.TableInfo)
	tbl.SUBMISSION_FORM_ID = NewNumberField("submission_form_id", tbl.TableInfo)
	tbl.SUBMISSION_ID = NewNumberField("submission_id", tbl.TableInfo)
	tbl.SUBMISSION_OVERRIDE_OPEN = NewBooleanField("submission_override_open", tbl.TableInfo)
	tbl.SUBMISSION_QUESTIONS = NewJSONField("submission_questions", tbl.TableInfo)
	tbl.SUBMISSION_START_AT = NewTimeField("submission_start_at", tbl.TableInfo)
	tbl.SUBMISSION_SUBMITTED = NewBooleanField("submission_submitted", tbl.TableInfo)
	tbl.SUBMISSION_UPDATED_AT = NewTimeField("submission_updated_at", tbl.TableInfo)
	tbl.USER_EVALUATION_ID = NewNumberField("user_evaluation_id", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying view.
func (tbl VIEW_V_USER_EVALUATIONS) As(alias string) VIEW_V_USER_EVALUATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}
